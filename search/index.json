[{"content":"WSL 连接 Vscode 打开 vscode 点击左下角的蓝色标 选择连接到WSL即可连接到默认的WSL子系统，如果你有多个子系统，可以选择使用发行版连接到WSL，然后选择你想要连接的子系统 [!TIP]\n进入子系统之后你就可以像在本地一样使用 vscode 来操作子系统啦，你可以使用快捷键 ctrl+`快速调出终端，然后就可以进行一些命令行操作啦\n安装vscode插件 由于使用vscode连接wsl的原理是在wsl里面开启一个vscode server，所以本机的插件是不会与wsl里面的插件共享的，你需要在插件页面安装对应的插件。\n[!TIP]\n推荐两个好用的 vscode 插件\nFavorites Manager：简单方便地文件夹收藏夹，将你常用文件夹添加到收藏夹，之后就可以通过它快速打开 Open Folder Context Menus for VS Code：可以让你快速地打开文件夹中的子文件夹，配合Favorites Manager可以高效找寻并打开想要的文件夹路径 [!NOTE]\n​\t由于vscode扩展的服务器是在国外，所以安装插件会出现加载缓慢或者加载不出来的情况，为了良好的体验，建议使用魔法来加速\n​\t不单止vscode，目前jetbrains全家桶也支持连接wsl来进行项目开发，不过笔者不常用jetbrains系的ide，所以没有实际体验过，感兴趣的可以自行去体验一下\n","date":"2024-10-30T23:47:42+08:00","image":"http://localhost:1313/blogs/03-%E5%9C%A8vscode%E4%B8%AD%E4%BD%BF%E7%94%A8wsl%E8%BF%9B%E8%A1%8C%E5%BC%80%E5%8F%91/OIP-C_x16_drawing_hu14351242286450249137.jpg","permalink":"http://localhost:1313/blogs/03-%E5%9C%A8vscode%E4%B8%AD%E4%BD%BF%E7%94%A8wsl%E8%BF%9B%E8%A1%8C%E5%BC%80%E5%8F%91/","title":"03 在VSCode中使用WSL进行开发"},{"content":" ​\t随着我们学习的编程语言越来越多，使用的各种各样的工具也越来越多，我们的电脑上就需要配置越来越多的环境，且不论环境之间是否具有冲突，单从复杂的系统环境来看，都会让电脑变的臃肿，最终就会出现牵一发而动全身的情况（All in boom）。\n​\t然而，目前win平台对于此并没有过多的方案选择，基本只有docker、Windows沙盒、传统VM以及 WSL 三个选项来管理你的系统环境，让系统变得更加清爽。\n​\tWindows沙盒只能在专业版中使用，鉴于大部分人都没有专业版，故并不推荐； 传统VM由于运行在应用层，在进行资源调度以及数据共享时极不方便，故不推荐；docker，由于docker并没有win的原生版本，即使是windows版本也是基于wsl的，于是乎你就在装了一个wsl的前提下，又安装了个docker，在神级插件Dev-Container辅助下，确实很不错，由于笔者没有尝试过，所以不做评价。\n​\tWSL也是一种虚拟机，由于win的原生支持，其不仅能够与win进行极其方便的数据共享，还能够方便的与宇宙第一IDE VScode 进行一触即连，优雅方便地开始你的代码开发，最重要的是，其能够完美地调用所有的计算资源而不需要手动调整，实在是管理系统环境的不二之选。\n​\t2024.11.12 笔者的笔记本坏了，需要重装系统，尽管重要数据能够通过硬盘、网盘来备份，但是一些系统环境要重新配置还是很费时间的。由于笔者已经投入了wsl怀抱，这时候只需要将所有的子系统导出，然后重要数据都放在同步盘里，就能够非常方便地重装系统然后恢复原来的环境了。\n启用基于Linux的子系统功能 在 Win10 or Win11 中，使用任务栏的搜索功能，搜索“启用或关闭windows功能”\n单击进入下图窗口，启用 “适用于Linux的Windows子系统功能” 和 \u0026ldquo;虚拟机平台\u0026rdquo;\n安装 WSL 子系统 使用 cmd，输入以下命令更新 WSL\n1 WSL --update 启用 WSL2 —— 目前默认使用 WSL2，但建议手动启用一下更为保险，WSL2 的功能比 1 更完善也更加稳定\n1 WSL --set-default-version 2 查看可用的WSL系统版本，并安装ubuntu系统 —— 这里安装的是22.04版本，没特殊需求使用22.04版本就够了\n1 2 WSL -l -o WSL --install Ubuntu-22.04 --web-download 这里请务必加上 --web-download ，否则他会从MS Store下载，亲测奇慢无比\n接下来只需跟着引导创建用户然后，设置密码即可，之后你可以在CMD或者Power Shell输入WSL来进入子系统\n意外情况 不出意外的话，这时候可能就出意外了\n意外一\n1 WSL -l -o 如果没有反应，这一般是那堵无形的墙堵住了你的去路。\n解决方法: 尝试换一个网绕过去，或者装个梯子爬过去\nps：经笔者尝试，目前国内是可以直接访问安装的，如果不行，配置一下DNS就好了\n​\t推荐：首选119.29.29.29 备用8.8.8.8\n意外二\n1 WSL --install Ubuntu-22.04 --web-download 安装系统失败，首先尝试根据官方文档中的操作一步一步来：旧版 WSL 的手动安装步骤 | Microsoft Learn\n如果仍然安装系统失败，你可以尝试使用windows更新修复问题，然后重试上述步骤。\n还有可能是因为bios未启用cpu虚拟化。 —— 然而 笔者在使用VM时显示不支持cpu虚拟化，但却能够使用WSL\n此时依然不行的话，要么就是系统不支持，要么就是硬件不支持，可以尝试重装系统或者更换电脑解决\n参考链接： WSL入门到入土 - 知乎 (zhihu.com) 旧版 WSL 的手动安装步骤 | Microsoft Learn ","date":"2024-10-01T23:46:05+08:00","image":"http://localhost:1313/blogs/01-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8wsl%E5%AE%89%E8%A3%85linux%E7%B3%BB%E7%BB%9F/OIP-C_x16_drawing_hu14351242286450249137.jpg","permalink":"http://localhost:1313/blogs/01-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8wsl%E5%AE%89%E8%A3%85linux%E7%B3%BB%E7%BB%9F/","title":"01 如何使用WSL安装Linux系统"},{"content":"安装 WSL Toolbox 使用 Microsoft Store 搜索 \u0026ldquo;WSL Toolbox\u0026rdquo;，点击安装即可。 也可以通过此链接安装：WSL Toolbox\n配置默认启动用户 (仅Ubuntu，其它发行版自行搜索) 不管使用 WSL 命令还是在 WSL Toolbox（以下简称 WT）中进入子系统，默认是使用root模式访问的，接下来我们要将默认访问用户改成安装系统时创建的那个。如果你享受root模式的裸奔快感，这一步可以跳过。\n先检查 wsl.conf 文件是否存在\n1 cat /etc/wsl.conf 如果文件不存在则创建一个\n1 touch /etc/wsl.conf 将以下内容写入该文件\n1 2 3 4 [boot] systemd=true #启用systemd命令，无脑开就行，能够解决一些兼容性问题 [user] default=YourName #这里替换成你的用户名 由于只能在子系统内部更改该文件，所以学会使用vim是必要的： Linux vi/vim | 菜鸟教程 (runoob.com)\n重启子系统即可生效 （推荐使用WT操作）\n更改子系统路径 子系统默认安装在C盘，为了不过分占用C盘空间，修改子系统路径是很必要的\n使用 WT 导出子系统\n点击Export之后保存到你想要存放子系统的路径（甚至可以存放在移动硬盘中）\n使用 WT 导入你的子系统\n选择刚刚导出的子系统文件，只修改系统名称即可\n将原来的子系统 Delete 掉就好了\n导出的子系统文件千万不要删除，以备后续可以通过 import 方便地增加子系统或者重装子系统\n如果你将wsl系统装在了外置存储设备，请不要在存储设备离开时打开WT，否则会导致WT崩溃，需要自行前往修复\n具体操作： 设置 \u0026raquo; 应用 \u0026raquo; 安装的应用 \u0026raquo; 找到WT选择高级选项 \u0026raquo; 修复 or 重置\n参考链接 WSL入门到入土 - 知乎 (zhihu.com) WSL Toolbox Linux vi/vim | 菜鸟教程 (runoob.com) ","date":"2024-10-01T23:45:47+08:00","image":"http://localhost:1313/blogs/02-%E4%BD%BF%E7%94%A8wsl-toolbox%E7%AE%A1%E7%90%86%E4%BD%A0%E7%9A%84linux%E5%AD%90%E7%B3%BB%E7%BB%9F/OIP-C_x16_drawing_hu14351242286450249137.jpg","permalink":"http://localhost:1313/blogs/02-%E4%BD%BF%E7%94%A8wsl-toolbox%E7%AE%A1%E7%90%86%E4%BD%A0%E7%9A%84linux%E5%AD%90%E7%B3%BB%E7%BB%9F/","title":"02 使用WSL ToolBox管理你的Linux子系统"}]